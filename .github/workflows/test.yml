name: "test"

on:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install dependencies for Cypress
      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 xvfb libgbm-dev

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 4: Install Cypress dependencies
      - name: Install Cypress dependencies
        run: |
          echo "Installing Cypress dependencies..."
          npm install

      # Step 5: Start eController.IntegrationHub and Run Tests
      - name: Start eController.IntegrationHub and Run Tests
        run: |
          echo "Starting eController.IntegrationHub as a background process..."
          nohup ./ehub/eController.IntegrationHub &> "${GITHUB_WORKSPACE}/ehub/integrationhub.log" &
          export INTEGRATION_HUB_PID=$!
          echo "Application started as a background process with PID $INTEGRATION_HUB_PID."
          echo "Waiting for eController.IntegrationHub to initialize..."
          sleep 10

          # Start a virtual display server
          echo "Starting virtual display server for Cypress..."
          Xvfb :99 -screen 0 1280x1024x24 &

          # Set display variable for Cypress
          export DISPLAY=:99
          
          echo "Running Cypress tests..."
          npx cypress run

      # Step 6: Cleanup - Stop the background process
      - name: Cleanup background process
        if: always()
        run: |
          echo "Stopping eController.IntegrationHub process..."
          if [ -n "$INTEGRATION_HUB_PID" ]; then
            kill -9 $INTEGRATION_HUB_PID
            echo "Background process stopped."
          else
            echo "No process to stop."
          fi
