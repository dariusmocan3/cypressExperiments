name: "Start eHub and Run Tests"

on:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

    # Step 2: Start the application in the background as a job
      - name: Start eController.IntegrationHub.exe as a persistent background job
        shell: pwsh
        run: |
          echo "Starting eController.IntegrationHub.exe as a persistent job..."
          cd ehub
          Start-Job -ScriptBlock {
            Start-Process -FilePath ".\eController.IntegrationHub.exe" `
              -RedirectStandardOutput "${{ github.workspace }}\ehub\stdout.log" `
              -RedirectStandardError "${{ github.workspace }}\ehub\stderr.log" `
              -NoNewWindow
          }
          echo "Application started as a background job."

            # Step 7 check inside the task list for eHub
      - name: Check if eController.IntegrationHub.exe is running
        shell: pwsh
        run: Get-Process | Where-Object { $_.ProcessName -like "*IntegrationHub*" }
          
      # Step 6: Display application-generated logs
      - name: Debug application-generated logs path
        shell: pwsh
        run: |
          echo "Checking for application-generated logs..."
          $logDir = "${{ github.workspace }}\ehub\Logs"
          echo "Listing all files in: $logDir"
          Get-ChildItem -Path $logDir
          $logFile = "$logDir\eController.IntegrationHub..log"
          if (Test-Path $logFile) {
              echo "Found log file at $logFile"
              Get-Content $logFile -Tail 50
          } else {
              throw "Log file not found at $logFile"
          }

      # Step 7 check inside the task list for eHub
      - name: Check if eController.IntegrationHub.exe is running
        shell: pwsh
        run: Get-Process | Where-Object { $_.ProcessName -like "*IntegrationHub*" }

      # Step 7: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 8: Install Cypress dependencies
      - name: Install Cypress dependencies
        run: npm install

      # Step 9: Run Cypress Tests
      - name: Run Cypress Tests
        run: npx cypress run
