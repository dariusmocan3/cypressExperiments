name: "Start eHub and Run Cypress Tests as background"

on:
  workflow_dispatch: # Allows manual execution

jobs:
  run-tests:
    runs-on: windows-latest
    timeout-minutes: 15 # Extended timeout to accommodate both app and tests

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures the full repository is checked out

      # Step 2: Confirm the working directory
      - name: Show current workspace
        run: |
          echo "Current workspace is:"
          echo ${{ github.workspace }}
          dir

      # Step 3: List all project files using PowerShell
      - name: List all files in the repository
        shell: pwsh
        run: |
          echo "Listing all files:"
          Get-ChildItem -Path . -Recurse

      # Step 4: Execute the eController.IntegrationHub.exe application
      - name: Start eController.IntegrationHub.exe
        shell: pwsh
        run: |
          echo "Starting eController.IntegrationHub.exe..."
          Start-Process -FilePath ".\ehub\eController.IntegrationHub.exe" -WorkingDirectory "${{ github.workspace }}\ehub" -NoNewWindow

      - name: Check if eController.IntegrationHub.exe is running
        shell: pws
        run: Get-Process | Where-Object { $_.ProcessName -like "*IntegrationHub*" }

            # Step 5: Wait until the application is listening on port 9880
      - name: Wait for application to initialize
        shell: pwsh
        run: |
          echo "Waiting for the application to start on http://0.0.0.0:9880..."
          $maxRetries = 30
          $retryCount = 0
          while ($retryCount -lt $maxRetries) {
              try {
                  Invoke-WebRequest -Uri "http://0.0.0.0:9880" -UseBasicParsing -TimeoutSec 5
                  echo "Application is ready!"
                  break
              } catch {
                  echo "Application not ready yet, retrying in 2 seconds..."
                  Start-Sleep -Seconds 2
                  $retryCount++
              }
          }
          if ($retryCount -eq $maxRetries) {
              throw "Application failed to start after $($maxRetries * 2) seconds."
          }
          
      # Step 6: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Ensure compatibility with your Cypress setup

      # Step 7: Install dependencies
      - name: Install Cypress dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      # Step 8: Run Cypress Tests
      - name: Run Cypress Tests
        run: |
          echo "Running Cypress tests..."
          npx cypress run
