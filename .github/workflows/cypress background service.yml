name: "Start eHub and Run Cypress Tests"

on:
  workflow_dispatch: # Allows manual execution

jobs:
  run-tests:
    runs-on: windows-latest
    timeout-minutes: 15 # Extended timeout to accommodate both app and tests

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures the full repository is checked out

      # Step 2: Confirm the working directory
      - name: Show current workspace
        run: |
          echo "Current workspace is:"
          echo ${{ github.workspace }}
          dir

      # Step 3: List all project files using PowerShell
      - name: List all files in the repository
        shell: pwsh
        run: |
          echo "Listing all files:"
          Get-ChildItem -Path . -Recurse
          
      # Step 4: Execute the eController.IntegrationHub.exe application
      - name: Start eController.IntegrationHub.exe
        shell: cmd
        run: |
          echo "Starting eController.IntegrationHub.exe..."
          cd ehub # Navigate to the ehub folder
          start /b .\eController.IntegrationHub.exe # Start the app in the background

      # Step 5: Wait for the application to start
      - name: Wait for the application to initialize
        shell: cmd
        run: |
          echo "Waiting for the application to initialize..."
          timeout /t 10

      # Step 6: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Ensure compatibility with your Cypress setup

      # Step 7: Install dependencies
      - name: Install Cypress dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      # Step 8: Run Cypress Tests
      - name: Run Cypress Tests
        run: |
          echo "Running Cypress tests..."
          npx cypress run
