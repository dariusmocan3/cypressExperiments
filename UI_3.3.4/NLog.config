<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xsi:schemaLocation="NLog NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
	<!-- Hinweis das autoReload="true" aktiviert dass die NLog.config bei Änderungen automatisch
	     neu eingelesen und angewendet wird. Achtet beim debuggen drauf die NLog.config im ./bin/Debug
	     Order zu bearbeiten statt der in VS! Sonst seht ihr die Änderungen nicht sofort im aktuellen Run. -->

	<!-- Time modi: https://blog.machinezoo.com/how-to-configure-nlog-time-source -->
	<time type="FastLocal" />

	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="eController.Util"/>
	</extensions>

	<variable name="FormatException" value="${onexception:${newline}${exception:format=tostring,data}}" />
	<variable name="EventProps" value="${when:when=length('${all-event-properties:includeScopeProperties=true}')>0:Inner= [${all-event-properties:includeScopeProperties=true}]}" />

	<!-- Logging Ziele wie z.B. die Console oder eine Datei -->
	<targets>
		<!-- Schreibt in eine Datei -->
		<target xsi:type="File"
				name="logfile"
				fileName=".\Logs\${processname}.log"
				layout="${longdate}|${level}|${logger:padding=30}|${callsite:includeNamespace=false}|${message}${EventProps}${FormatException}"
				archiveEvery="Day"
				archiveNumbering="DateAndSequence"
				archiveDateFormat="yyyy-MM-dd"
				archiveAboveSize="10000000"
				maxArchiveFiles="5"
            />
		<!-- Schreibt auf die Console mit ein bisschen Farbe -->
		<target xsi:type="ColoredConsole" name="logconsole"
				layout="${longdate}|${level:truncate=3:uppercase=true}|${logger:shortName=true:padding=20:truncate=20}|${message}${EventProps}${FormatException}">
			<highlight-row condition="level == LogLevel.Info and starts-with(logger, 'Microsoft')" foregroundColor="DarkGray"/>
			<highlight-row condition="level == LogLevel.Info" foregroundColor="Cyan"/>
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow"/>
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Magenta"/>
		</target>
	</targets>

	<!-- Nach welchen Regeln an welches Ziel geloggt wird -->
	<rules>
		<!-- Suppress default asp logging spam -->
		<logger name="Microsoft.AspNetCore.Routing.*" maxlevel="Info" final="true" />
		<logger name="Microsoft.AspNetCore.Mvc.*" maxlevel="Info" final="true" />
		<logger name="Microsoft.AspNetCore.Hosting.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Info" writeTo="logfile,logconsole" />
	</rules>
</nlog>
